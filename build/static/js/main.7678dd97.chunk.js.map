{"version":3,"sources":["context/alertas/alertaContext.js","context/autenticacion/authContext.js","components/auth/Login.js","components/auth/NuevaCuenta.js","context/proyectos/ProyectoContext.js","components/proyectos/NuevoProyecto.js","context/tareas/TareaContext.js","components/proyectos/Proyecto.js","components/proyectos/ListadoProyectos.js","components/layout/Sidebar.js","components/layout/Barra.js","components/tareas/FormTarea.js","components/tareas/Tarea.js","components/tareas/ListadoTareas.js","components/proyectos/Proyectos.js","types/index.js","context/proyectos/ProyectoReducer.js","config/axios.js","context/proyectos/ProyectoState.js","context/tareas/TareaReducer.js","context/tareas/TareaState.js","context/alertas/alertaReducer.js","context/alertas/alertaState.js","context/autenticacion/authReducer.js","config/token.js","context/autenticacion/authState.js","components/rutas/RutaPrivada.js","App.js","reportWebVitals.js","index.js"],"names":["alertaContext","createContext","authContext","Login","props","useContext","AlertaContext","alerta","mostrarAlerta","AuthContext","mensaje","autenticado","iniciarSesion","useEffect","history","push","msg","categoria","useState","email","password","usuario","guardarUsuario","onChange","e","target","name","value","className","onSubmit","preventDefault","trim","htmlFor","type","id","placeholder","to","NuevaCuenta","registrarUsuario","nombre","confirmar","length","ProyectoContext","NuevoProyecto","proyectosContext","formulario","errorformulario","mostrarFormulario","agregarProyecto","mostrarError","proyecto","guardarProyecto","onClick","TareaContext","Proyecto","proyectoActual","obtenerTareas","_id","ListadoProyectos","proyectos","obtenerProyectos","TransitionGroup","map","CSSTransition","timeout","classNames","Sidebar","Barra","usuarioAutenticado","cerrarSesion","FormTarea","tareasContext","tareaseleccionada","errortarea","agregarTarea","validarTarea","actualizarTarea","limpiarTarea","guardarTarea","tarea","Tarea","eliminarTarea","guardarTareaActual","cambiarEstado","estado","seleccionarTarea","ListadoTareas","eliminarProyecto","tareasproyecto","Proyectos","FORMULARIO_PROYECTO","OBTENER_PROYECTOS","AGREGAR_PROYECTO","VALIDAR_FORMULARIO","PROYECTO_ACTUAL","ELIMINAR_PROYECTO","PROYECTO_ERROR","TAREAS_PROYECTO","AGREGAR_TAREA","VALIDAR_TAREA","ELIMINAR_TAREA","TAREA_ACTUAL","ACTUALIZAR_TAREA","LIMPIAR_TAREA","MOSTRAR_ALERTA","OCULTAR_ALERTA","REGISTRO_EXITOSO","REGISTRO_ERROR","OBTENER_USUARIO","LOGIN_EXITOSO","LOGIN_ERROR","CERRAR_SESION","state","action","payload","filter","clienteAxios","axios","create","baseURL","process","REACT_APP_BACKEND_URL","ProyectoState","useReducer","ProyectoReducer","dispatch","a","get","resultado","data","post","console","log","proyectoId","delete","Provider","children","TareaState","TareaReducer","params","tareas","put","AlertaState","alertaReducer","setTimeout","localStorage","setItem","token","cargando","removeItem","tokenAuth","defaults","headers","common","AuthState","initialState","getItem","AuthReducer","datos","respuesta","response","RutaPrivada","Component","component","render","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7678dd97.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst alertaContext = createContext();\n\nexport default alertaContext;","import { createContext } from 'react';\n\nconst authContext = createContext();\n\nexport default authContext;","import React, {useState, useContext, useEffect} from 'react';\nimport {Link} from 'react-router-dom';\nimport AlertaContext from '../../context/alertas/alertaContext';\nimport AuthContext from '../../context/autenticacion/authContext';\n\nconst Login = (props) => {\n\n    //Extraer los valores del context alrtta\n\n    const alertaContext = useContext(AlertaContext);\n    const{alerta, mostrarAlerta} = alertaContext;\n\n    const authContext = useContext(AuthContext);\n    const {mensaje, autenticado, iniciarSesion} = authContext;\n    //El caso de que el usuario o contrasena no exista\n    useEffect(()=>{\n         if(autenticado){\n             props.history.push('/proyectos');\n         }\n\n        if(mensaje){\n            mostrarAlerta(mensaje.msg, mensaje.categoria);\n        }\n\n        //eslint-disable-next-line\n    }, [mensaje, autenticado, props.history ]);\n\n//State para iniciar sesion\n\n  const [usuario, guardarUsuario] = useState({\n      email: '',\n      password: ''\n  });\n\n  //Extraer de usuario\n  const {email, password} = usuario;\n\n  const onChange = e => {\n      guardarUsuario({\n          ...usuario,\n          [e.target.name] : e.target.value\n      })\n\n  }  \n\n\n  //Cuando el usuario quiere iniciar sesion\n\n  const onSubmit = e => {\n      e.preventDefault();\n\n      //Validacion\n\n      if(email.trim() === '' || password.trim() === ''){\n          mostrarAlerta('Todos los campos son obligatorios', 'alerta-error');\n      }\n\n      //Accion\n\n      iniciarSesion({email, password});\n  }\n    return (\n        <div className=\"form-usuario\">\n            {alerta ? (<div className={`alerta ${alerta.categoria}`}>{alerta.msg}</div>) :null}\n            <div className=\"contenedor-form sombra-dark\">\n                <h1>Iniciar sesión</h1>\n                <form\n                    onSubmit={onSubmit}\n                >\n                    <div className=\"campo-form\">\n                        <label htmlFor=\"email\">Correo</label>\n                        <input\n                            type=\"email\"\n                            id=\"email\"\n                            name=\"email\"\n                            placeholder=\"Tu correo\"\n                            value={email}\n                            onChange={onChange}\n                        />\n                    </div>\n                    <div className=\"campo-form\">\n                        <label htmlFor=\"password\">Contraseña</label>\n                        <input\n                            type=\"password\"\n                            id=\"password\"\n                            name=\"password\"\n                            placeholder=\"Tu contraseña\"\n                            value={password}\n                            onChange={onChange}\n                        />\n                    </div>\n\n                    <div className=\"campo-form\">\n                        <input\n                            type=\"submit\"\n                            className=\"btn btn-primario btn-block\"\n                            value=\"Iniciar Sesion\"\n                        />\n                    </div>    \n                </form>\n\n\n                <Link to={'/nueva-cuenta'} className=\"enlace-cuenta\">\n                    Registrarse\n                </Link>\n            </div>\n            \n        </div>\n    );\n}\n \nexport default Login;","import React, {useContext, useState, useEffect} from 'react';\nimport {Link} from 'react-router-dom';\nimport AlertaContext from '../../context/alertas/alertaContext';\nimport AuthContext from '../../context/autenticacion/authContext';\nconst NuevaCuenta = (props) => {\n\n    //Extraer los valores del context alrtta\n\n    const alertaContext = useContext(AlertaContext);\n    const{alerta, mostrarAlerta} = alertaContext;\n\n    const authContext = useContext(AuthContext);\n    const {mensaje, autenticado, registrarUsuario} = authContext;\n\n    //En caso de que el usuario se haya aut o regi o sea un reg duplicado\n\n    useEffect(()=>{\n        if(autenticado){\n            props.history.push('/proyectos');\n        }\n\n        if(mensaje){\n            mostrarAlerta(mensaje.msg, mensaje.categoria);\n        }\n\n        //eslint-disable-next-line\n    }, [mensaje, autenticado, props.history ]);\n//State para iniciar sesion\n\n  const [usuario, guardarUsuario] = useState({\n    nombre:'', \n    email: '',\n    password: '',\n    confirmar:''\n  });\n\n  //Extraer de usuario\n  const {nombre, email, password, confirmar} = usuario;\n\n  const onChange = e => {\n      guardarUsuario({\n          ...usuario,\n          [e.target.name] : e.target.value\n      })\n\n  }  \n\n\n  //Cuando el usuario quiere iniciar sesion\n\n  const onSubmit = e => {\n      e.preventDefault();\n\n      \n\n        // Validar que no haya campos vacios\n        if( nombre.trim() === '' || \n            email.trim() === '' || \n            password.trim() === '' || \n            confirmar.trim() === '' ) {\n            mostrarAlerta('Todos los campos son obligatorios', 'alerta-error');\n            return;\n            }\n\n        // Password minimo de 6 caracteres\n        if(password.length < 6) {\n            mostrarAlerta('El password debe ser de al menos 6 caracteres', 'alerta-error');\n            return;\n        }\n\n        // Los 2 passwords son iguales\n        if(password !== confirmar) {\n            mostrarAlerta('Los passwords no son iguales', 'alerta-error');\n            return;\n        }\n\n        //Accion\n        registrarUsuario({\n            nombre, \n            email, \n            password\n        });\n\n\n      \n  }\n    return (\n        <div className=\"form-usuario\">\n            {alerta ? (<div className={`alerta ${alerta.categoria}`}>{alerta.msg}</div>) :null}\n            <div className=\"contenedor-form sombra-dark\">\n                <h1>Registrarse</h1>\n                <form\n                    onSubmit={onSubmit}\n                >\n                    <div className=\"campo-form\">\n                        <label htmlFor=\"nombre\">Nombre del usuario</label>\n                        <input\n                            type=\"text\"\n                            id=\"nombre\"\n                            name=\"nombre\"\n                            placeholder=\"Tu nombre\"\n                            value={nombre}\n                            onChange={onChange}\n                        />\n                    </div>\n                    <div className=\"campo-form\">\n                        <label htmlFor=\"email\">Correo</label>\n                        <input\n                            type=\"email\"\n                            id=\"email\"\n                            name=\"email\"\n                            placeholder=\"Tu correo\"\n                            value={email}\n                            onChange={onChange}\n                        />\n                    </div>\n                    <div className=\"campo-form\">\n                        <label htmlFor=\"password\">Contraseña</label>\n                        <input\n                            type=\"password\"\n                            id=\"password\"\n                            name=\"password\"\n                            placeholder=\"Tu contraseña\"\n                            value={password}\n                            onChange={onChange}\n                        />\n                    </div>\n\n                    <div className=\"campo-form\">\n                        <label htmlFor=\"confirmar\">Confirmar Contraseña</label>\n                        <input\n                            type=\"password\"\n                            id=\"confirmar\"\n                            name=\"confirmar\"\n                            placeholder=\"Tu confirmacion contraseña\"\n                            value={confirmar}\n                            onChange={onChange}\n                        />\n                    </div>\n\n                    <div className=\"campo-form\">\n                        <input\n                            type=\"submit\"\n                            className=\"btn btn-primario btn-block\"\n                            value=\"Registrarme\"\n                        />\n                    </div>    \n                </form>\n\n\n                <Link to={'/'} className=\"enlace-cuenta\">\n                    Iniciar sesión\n                </Link>\n            </div>\n            \n        </div>\n    );\n}\n \nexport default NuevaCuenta;","import { createContext } from 'react';\n\nconst ProyectoContext = createContext();\n\nexport default ProyectoContext;","import React, {Fragment, useState, useContext} from 'react';\nimport ProyectoContext from '../../context/proyectos/ProyectoContext';\n\nconst NuevoProyecto = () => {\n\n    //Obtener el state del formulario\n\n    const proyectosContext = useContext(ProyectoContext)\n    const {formulario, errorformulario, mostrarFormulario, agregarProyecto, mostrarError} = proyectosContext;\n\n    //State para proyecto\n\n    const [proyecto, guardarProyecto] = useState({\n        nombre:''\n    });\n\n    //Extraer nombre de proyecto\n\n    const {nombre} = proyecto;\n\n    //Lee los contenidos del input\n\n    const onChangeProyecto = e => {\n        guardarProyecto({\n            ...proyecto,\n            [e.target.name] : e.target.value\n        })\n    }\n\n    //Cuando el usuario enviar el proyecto\n\n    const onSubmitProyecto = e =>{\n        e.preventDefault();\n\n        //Validar el proyecto\n\n        if(nombre === ''){\n            mostrarError();\n            return;\n        }\n\n        //Agregar al state\n\n        agregarProyecto(proyecto)\n\n        //Reiniciar el form\n\n        guardarProyecto({\n            nombre:''\n        })\n    }\n\n    //Mostrar boton\n\n    const onBoton = ()=>{\n        mostrarFormulario();\n    }\n\n\n    return (\n        <Fragment>\n            <button\n            type=\"button\"\n            className=\"btn btn-block btn-primario\"\n            onClick={onBoton}\n\n            >Nuevo Proyecto</button>\n\n           {\n               formulario ?\n                (\n                     <form\n                    className=\"formulario-nuevo-proyecto\"\n                    onSubmit={onSubmitProyecto}\n                    >\n                        <input\n                            type=\"text\"\n                            className=\"input-text\"\n                            placeholder=\"Nombre Proyecto\"\n                            name=\"nombre\"\n                            value={nombre}\n                            onChange={onChangeProyecto}\n                        />\n    \n                        <input\n                            type=\"submit\"\n                            className=\"btn btn-primario btn-block\"\n                            value=\"Agregar Proyecto\"\n                        />\n                    </form>\n                ) : null\n           }\n\n           {errorformulario ? <p className=\"mensaje error\">El nombre del proyecto es obligatorio</p> : null}\n\n        </Fragment>\n        \n    );\n}\n \nexport default NuevoProyecto;","import {createContext} from 'react'\nconst TareaContext = createContext();\n\nexport default TareaContext;","import React,{useContext} from 'react';\nimport ProyectoContext from '../../context/proyectos/ProyectoContext';\nimport TareaContext from '../../context/tareas/TareaContext';\n\n\nconst Proyecto = ({proyecto}) => {\n\n    //Obtener el state del poryectos\n\n    const proyectosContext = useContext(ProyectoContext)\n    const { proyectoActual} = proyectosContext;\n\n    //Obtener la funcion del contex de tarea\n\n    const tareasContext = useContext(TareaContext);\n    const { obtenerTareas } = tareasContext;\n\n    //Funcion para agregar el proyecto actual\n    const seleccionarProyecto = id => {\n        proyectoActual(id); //Fijar proyecto actual\n        obtenerTareas(id); //Filtrar las tareas\n\n    }\n\n    return (\n        <li>\n            <button\n                type=\"button\"\n                className=\"btn btn-blank\"\n                onClick={() => seleccionarProyecto(proyecto._id)}\n            >{proyecto.nombre}</button>\n        </li>\n    );\n}\n \nexport default Proyecto;","import React, {useContext, useEffect} from 'react';\nimport Proyecto from './Proyecto';\nimport ProyectoContext from '../../context/proyectos/ProyectoContext';\nimport AlertaContext from '../../context/alertas/alertaContext';\nimport {TransitionGroup, CSSTransition} from 'react-transition-group';\n\nconst ListadoProyectos = () => {\n\n    //Obtener los proyectos del initialState\n    const proyectosContext = useContext(ProyectoContext);\n    const {proyectos, obtenerProyectos} = proyectosContext;\n\n    const alertaContext = useContext(AlertaContext);\n    const {mensaje, alerta, mostrarAlerta} = alertaContext;\n\n    //Obtener proyectos cuando carga el componente\n    useEffect(()=>{\n        //Para los errores\n        if(mensaje){\n            mostrarAlerta(mensaje.msg, mensaje.categoria);\n        }\n        obtenerProyectos();\n\n        //eslint-disable-next-line\n    }, [mensaje]);\n\n    //Se revisa si proyectos tiene contenido alguno\n    if(proyectos.length ===0) return <p>No hay proyectos</p>;\n\n    \n\n    \n    return ( \n        <ul className=\"listado-proyectos\">\n            {alerta ?(<div className=\"{`alerta ${alerta.categoria}`}\">{alerta.msg}</div>) :null}\n            <TransitionGroup>\n            {proyectos.map(proyecto => (\n                <CSSTransition\n                key={proyecto._id}\n                timeout={200}\n                classNames=\"proyecto\"\n                >\n                    <Proyecto\n                    \n                    proyecto={proyecto}\n                />\n                </CSSTransition>\n            ))}\n            </TransitionGroup>\n        </ul>\n    );\n}\n \nexport default ListadoProyectos;","import React from 'react';\nimport NuevoProyecto from '../proyectos/NuevoProyecto';\nimport ListadoProyectos from '../proyectos/ListadoProyectos';\n\nconst Sidebar = () => {\n    return (\n        <aside>\n            <h1>Task <span>manager</span></h1>\n\n            <NuevoProyecto/>\n\n            <div className=\"proyectos\">\n                <h2>Tus Proyectos</h2>\n\n                <ListadoProyectos />\n            </div>\n        </aside>\n    );\n}\n \nexport default Sidebar ;","import React, {useContext, useEffect} from 'react';\nimport AuthContext from '../../context/autenticacion/authContext';\n\n\nconst Barra = () => {\n\n    //Extraer la informacion de autentificacion\n    const authContext = useContext(AuthContext);\n    const {usuario, usuarioAutenticado, cerrarSesion} = authContext;\n\n    useEffect(()=>{\n        usuarioAutenticado();\n    }, []);\n    return (\n        <header className=\"app-header\">\n            {usuario ?<p className=\"nombre-usuario\">Hola <span>{usuario.nombre}</span></p> :null}\n            \n\n            <nav className=\"nav-principal\">\n                <button\n                    className=\"btn btn-blank cerrar-sesion\"\n                    onClick={()=> cerrarSesion()}\n                >\n                    Cerrar Sesion\n                </button>\n            </nav>\n        </header>\n    );\n}\n \nexport default Barra;","import React, {useContext, useState, useEffect} from 'react';\nimport ProyectoContext from '../../context/proyectos/ProyectoContext';\nimport TareaContext from '../../context/tareas/TareaContext';\n\nconst FormTarea = () => {\n\n\n    //Extraer si un proyecto esta activo\n    const proyectosContext = useContext(ProyectoContext);\n    const {proyecto} = proyectosContext;\n\n    //Ovtener la funcion del context de la tarea\n    const tareasContext = useContext(TareaContext);\n    const {tareaseleccionada, errortarea, agregarTarea, validarTarea, obtenerTareas, actualizarTarea, limpiarTarea} = tareasContext;\n\n\n    //Effect que detecta la tarea\n\n    useEffect(()=>{\n        if(tareaseleccionada !== null){\n            guardarTarea(tareaseleccionada)\n        }else{\n            guardarTarea({\n                nombre:''\n            })\n        }\n    }, [tareaseleccionada]);\n    //State del formulario\n\n    const [tarea, guardarTarea] = useState({\n        nombre:''\n    })\n\n    //Extraer el nombre dle proyecto\n\n    const { nombre } = tarea;\n\n    //Si no hay proyecto seleccionado\n    if(!proyecto) return null;\n\n\n    //Extraer el proyecto actual\n\n    const [proyectoActual] = proyecto;\n\n    //Leer los valores del formulario\n\n    const handleChange = e =>{\n        guardarTarea({\n            ...tarea,\n            [e.target.name] : e.target.value\n        })\n    }\n\n    const onSubmit = e => {\n        e.preventDefault();\n\n        //Validar\n        if(nombre.trim() === ''){\n            validarTarea();\n            return;\n        }\n\n        //Si es edicion o si es nueva tarea\n        if(tareaseleccionada === null){\n            //tarea nueva\n            //Agregar la nueva tarea al state de tareas\n            tarea.proyecto = proyectoActual._id;\n            agregarTarea(tarea);\n        }else{\n            //actualizar tarea existente\n            actualizarTarea(tarea);\n\n            //Elimina tarea seleccionada del state\n            limpiarTarea();\n        }\n\n        //Pasar la validación\n\n        \n\n         //Obtener las tareas y filtrarlas\n        obtenerTareas(proyectoActual.id);\n        \n\n        //Reiniciar el form\n\n        guardarTarea({\n            nombre:''\n        })\n\n       \n\n    }\n\n\n    return (\n        <div className=\"formulario\">\n            <form\n                onSubmit={onSubmit}\n            >\n                <div className=\"cotenedor-input\">\n                    <input\n                        type=\"text\"\n                        className=\"input-text\"\n                        placeholder=\"Nombre Tarea\"\n                        name=\"nombre\"\n                        value={nombre}\n                        onChange={handleChange}\n                    />\n                </div>\n\n                <div className=\"cotenedor-input\">\n                    <input\n                        type=\"submit\"\n                        className=\"btn btn-primario btn-submit btn-block\"\n                        value={tareaseleccionada ? 'Editar Tarea' : 'Agregar Tarea'}\n                    />\n                </div>\n            </form>\n\n            {errortarea ? <p className=\"mensaje error\">El nombre de la tarea es obligatorio</p>: null }\n        </div>\n    );\n}\n \nexport default FormTarea;","import React, {useContext} from 'react';\nimport ProyectoContext from '../../context/proyectos/ProyectoContext';\nimport TareaContext from '../../context/tareas/TareaContext';\nconst Tarea = ({tarea}) => {\n\n    //Extrar si un proyecto esta activo\n    const proyectosContext = useContext(ProyectoContext);\n    const {proyecto} = proyectosContext;\n\n    //Obtener la funcion del context de una tarea\n    const tareasContext = useContext(TareaContext);\n    const {eliminarTarea, obtenerTareas, actualizarTarea, guardarTareaActual} = tareasContext;\n\n    //Extraer el proyecto\n\n    const[proyectoActual] = proyecto;\n\n    //Funcion que se ejecuta cuando el usuario presiona el boton de eliminar\n    const tareaEliminar = id => {\n        eliminarTarea(id, proyectoActual._id);\n        obtenerTareas(proyectoActual.id)\n    }\n\n    //Funcion que modifica el estado de las tareas\n\n    const cambiarEstado = tarea => {\n        if(tarea.estado){\n            tarea.estado = false;\n        }else{\n            tarea.estado = true;\n        }\n        actualizarTarea(tarea);\n    }\n\n    //Agrega una tarea actual para editar\n\n    const seleccionarTarea = tarea => {\n        guardarTareaActual(tarea);\n    }\n\n    return (\n\n        <li className=\"tarea sombra\">\n            <p>{tarea.nombre}</p>\n\n            <div className=\"estado\">\n                {tarea.estado\n                ?\n                 (\n                     <button\n                     type=\"button\"\n                     className=\"completo\"\n                     onClick={() => {cambiarEstado(tarea)}}\n                     >Completo</button>\n                 )\n            \n                :\n                (\n                    <button\n                    type=\"button\"\n                    className=\"incompleto\"\n                    onClick={() => {cambiarEstado(tarea)}}\n                    >Incompleto</button>\n                )\n                }\n            </div>\n\n            <div className=\"acciones\">\n                <button\n                    type=\"button\"\n                    className=\"btn btn-primario\"\n                    onClick={() => seleccionarTarea(tarea)}\n                >Editar</button>\n\n                <button\n                    type=\"button\"\n                    className=\"btn btn-secundario\"\n                    onClick={()=> tareaEliminar(tarea._id)}\n                >Eliminar</button>\n            </div>\n        </li>\n    );\n}\n \nexport default Tarea;","import React, {Fragment,useContext} from 'react';\nimport Tarea from './Tarea';\nimport ProyectoContext from '../../context/proyectos/ProyectoContext';\nimport TareaContext from '../../context/tareas/TareaContext';\nimport {CSSTransition, TransitionGroup} from 'react-transition-group';\n\nconst ListadoTareas = () => {\n\n    //Obtener los proyectos del initialState\n    const proyectosContext = useContext(ProyectoContext);\n    const {proyecto, eliminarProyecto} = proyectosContext;\n\n    //Las tareas del proyecto\n\n    const tareasContext = useContext(TareaContext);\n    const {tareasproyecto} = tareasContext;\n\n    //Si no hay proyecto seleccionado\n    if(!proyecto) return <h2>Selecciona un proyecto</h2>;\n\n\n    //Extraer el proyecto actual\n\n    const [proyectoActual] = proyecto;\n\n\n\n    //Eliminar un proyecto\n\n    const onClickEliminar = () => {\n        eliminarProyecto(proyectoActual._id)\n    } \n    return (\n        <Fragment>\n\n            <h2>Proyecto: {proyectoActual.nombre}</h2>\n\n            <ul className=\"listado-tareas\">\n                {tareasproyecto.length === 0\n                \n                ? (<li className=\"tarea\"><p>No hay tareas</p></li>)\n            \n                : <TransitionGroup>\n                {tareasproyecto.map(tarea =>(\n                    <CSSTransition\n                    key={tarea.id}\n                    timeout={300}\n                    className=\"tarea\"\n                    >\n                        <Tarea\n                            tarea={tarea}\n                        />\n                    </CSSTransition>\n                ))}\n                 </TransitionGroup>\n                 \n                }\n                \n                \n            </ul>\n\n            <button \n                type=\"button\"\n                className=\"btn btn-eliminar\"\n                onClick={onClickEliminar}\n            >Eliminar Proyecto &times;</button>\n        </Fragment>\n    );\n}\n \nexport default ListadoTareas;","import React, {useContext, useEffect} from 'react';\nimport Sidebar from '../layout/Sidebar';\nimport Barra from '../layout/Barra';\nimport FormTarea from '../tareas/FormTarea';\nimport ListadoTareas from '../tareas/ListadoTareas';\nimport AuthContext from '../../context/autenticacion/authContext';\n\nconst Proyectos = () => {\n\n    //Extraer la informacion de autentificacion\n    const authContext = useContext(AuthContext);\n    const {usuarioAutenticado} = authContext;\n\n    useEffect(()=>{\n        usuarioAutenticado();\n    }, []);\n\n    return ( \n        <div className = \"contenedor-app\" >\n\n            <Sidebar/>\n            \n            <div className=\"seccion-principal\">\n                <Barra/>\n                <main>\n                    <FormTarea />\n                    <div className=\"contenedor-tareas\">\n                        <ListadoTareas />\n                    </div>\n                </main>\n            </div>\n        </div>\n    );\n}\n\nexport default Proyectos;","export const FORMULARIO_PROYECTO = 'FORMULARIO_PROYECTO';\nexport const OBTENER_PROYECTOS = 'OBTENER_PROYECTOS';\nexport const AGREGAR_PROYECTO = 'AGREGAR_PROYECTO';\nexport const VALIDAR_FORMULARIO = 'VALIDAR_FORMULARIO';\nexport const PROYECTO_ACTUAL = 'PROYECTO_ACTUAL';\nexport const ELIMINAR_PROYECTO = 'ELIMINAR_PROYECTO';\nexport const PROYECTO_ERROR = 'PROYECTO_ERROR';\n\nexport const TAREAS_PROYECTO = 'TAREAS_PROYECTO';\nexport const AGREGAR_TAREA = 'AGREGAR_TAREA';\nexport const VALIDAR_TAREA = 'VALIDAR_TAREA';\nexport const ELIMINAR_TAREA = 'ELIMINAR_TAREA';\nexport const TAREA_ACTUAL = 'TAREA_ACTUAL';\nexport const ACTUALIZAR_TAREA = 'ACTUALIZAR_TAREA';\nexport const LIMPIAR_TAREA = 'LIMPIAR_TAREA';\n\nexport const MOSTRAR_ALERTA = 'MOSTRAR_ALERTA';\nexport const OCULTAR_ALERTA = 'OCULTAR_ALERTA';\n\nexport const REGISTRO_EXITOSO = 'REGISTRO_EXITOSO';\nexport const REGISTRO_ERROR = 'REGISTRO_ERROR';\nexport const OBTENER_USUARIO = 'OBTENER_USUARIO';\nexport const LOGIN_EXITOSO = 'LOGIN_EXITOSO';\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\nexport const CERRAR_SESION = 'CERRAR_SESION';\n\n","import {\n    FORMULARIO_PROYECTO,\n    OBTENER_PROYECTOS,\n    AGREGAR_PROYECTO,\n    PROYECTO_ERROR,\n    VALIDAR_FORMULARIO,\n    PROYECTO_ACTUAL,\n    ELIMINAR_PROYECTO\n} from '../../types';\n\nexport default (state, action) => {\n    switch(action.type){\n        case FORMULARIO_PROYECTO:\n            return{\n                ...state,\n                formulario: true\n            }\n\n        case OBTENER_PROYECTOS:\n            \n            return{\n                ...state,\n                proyectos: action.payload\n            } \n            \n        case AGREGAR_PROYECTO:\n            return{\n                ...state,\n                proyectos: [...state.proyectos, action.payload],\n                formulario:false,\n                errorformulario: false\n            }\n        case VALIDAR_FORMULARIO:\n            return{\n                ...state,\n                errorformulario: true\n            } \n\n        case PROYECTO_ACTUAL:\n            return{\n                ...state,\n                proyecto: state.proyectos.filter(proyecto => proyecto._id === action.payload)\n            } \n\n        case ELIMINAR_PROYECTO:\n            return{\n                ...state,\n                proyectos: state.proyectos.filter(proyecto => proyecto._id !== action.payload),\n                proyecto: null\n            }\n        case PROYECTO_ERROR:\n            return{\n                ...state,\n                mensaje:action.payload\n            } \n        default :\n            return state;\n    }\n}","import axios from 'axios';\n\nconst clienteAxios = axios.create({\n    baseURL : process.env.REACT_APP_BACKEND_URL\n});\n\nexport default clienteAxios;","import React, {useReducer} from 'react';\nimport ProyectoContext from './ProyectoContext';\nimport ProyectoReducer from './ProyectoReducer';\nimport {\n    FORMULARIO_PROYECTO,\n    OBTENER_PROYECTOS,\n    AGREGAR_PROYECTO,\n    PROYECTO_ERROR,\n    VALIDAR_FORMULARIO,\n    PROYECTO_ACTUAL,\n    ELIMINAR_PROYECTO\n    \n} from '../../types';\n\nimport clienteAxios from '../../config/axios';\n\n\n\n\nconst ProyectoState = props => {\n\n    \n\n    const initialState = {\n        proyectos : [],\n        formulario:false,\n        errorformulario: false,\n        proyecto: null,\n        mensaje:null\n    }\n\n    \n\n    //Dispatch para ejecutar las acciones\n\n    const [state, dispatch] = useReducer (ProyectoReducer, initialState);\n\n    //Serie de funciones\n\n    const mostrarFormulario = () => {\n        dispatch({\n            type: FORMULARIO_PROYECTO\n        })\n    }\n\n    //Obtener los proyectos\n\n    const obtenerProyectos = async () => {\n        try {\n            const resultado = await clienteAxios.get('/api/proyectos');\n            dispatch({\n                type: OBTENER_PROYECTOS,\n                payload: resultado.data.proyectos\n            })\n        } catch (error) {\n            const alerta = {\n                msg: 'Hubo un error',\n                categoria: 'alerta-error'\n            }\n            dispatch({\n                type: PROYECTO_ERROR,\n                payload: alerta\n            })\n        }\n    }\n\n    //Agregar nuevo proyecto\n\n    const agregarProyecto = async proyecto => {\n        \n\n        \n\n        try {\n            const resultado = await clienteAxios.post('/api/proyectos', proyecto);\n            console.log(resultado);\n            //Insertar el proyecto en el state\n            dispatch({\n                type: AGREGAR_PROYECTO,\n                payload:resultado.data\n            })\n        } catch (error) {\n            const alerta = {\n                msg: 'Hubo un error',\n                categoria: 'alerta-error'\n            }\n            dispatch({\n                type: PROYECTO_ERROR,\n                payload: alerta\n            })\n        }\n    }\n\n    //Validar el formulario por errores\n\n    const mostrarError = () => {\n        dispatch({\n            type: VALIDAR_FORMULARIO\n        })\n    }\n\n    //Selecciona el proyecto que el usuario dio click\n\n    const proyectoActual = proyectoId => {\n        dispatch({\n            type: PROYECTO_ACTUAL,\n            payload:proyectoId\n        })\n    }\n\n    //Elimina un proyecto\n\n    const eliminarProyecto = async proyectoId => {\n        try {\n            await clienteAxios.delete(`/api/proyectos/${proyectoId}`);\n            dispatch({\n                type: ELIMINAR_PROYECTO,\n                payload:proyectoId\n            })\n        } catch (error) {\n            const alerta = {\n                msg: 'Hubo un error',\n                categoria: 'alerta-error'\n            }\n            dispatch({\n                type: PROYECTO_ERROR,\n                payload: alerta\n            })\n        }\n    }\n\n    return(\n        <ProyectoContext.Provider\n        value={{\n            proyectos: state.proyectos,\n            formulario:state.formulario,\n            errorformulario:state.errorformulario,\n            proyecto: state.proyecto,\n            mensaje: state.mensaje,\n            mostrarFormulario,\n            obtenerProyectos,\n            agregarProyecto,\n            mostrarError,\n            proyectoActual,\n            eliminarProyecto\n        }}> \n\n            {props.children}\n        </ProyectoContext.Provider>    \n    )\n}\n\nexport default ProyectoState;","import {\n    TAREAS_PROYECTO,\n    AGREGAR_TAREA,\n    VALIDAR_TAREA,\n    ELIMINAR_TAREA,\n    TAREA_ACTUAL,\n    ACTUALIZAR_TAREA,\n    LIMPIAR_TAREA\n} from '../../types';\n\n\nexport default (state, action) => {\n    switch(action.type){\n        case TAREAS_PROYECTO:\n            return{\n                ...state,\n                tareasproyecto: action.payload\n            }\n        case AGREGAR_TAREA:\n            return{\n                ...state,\n                tareasproyecto:[action.payload, ...state.tareasproyecto],\n                errortarea:false\n            }\n        case VALIDAR_TAREA:\n            return{\n                ...state,\n                errortarea:true\n            }\n        case ELIMINAR_TAREA:\n            return{\n                ...state,\n                tareasproyecto: state.tareasproyecto.filter(tarea => tarea._id !== action.payload)\n            }\n        case ACTUALIZAR_TAREA:    \n            return{\n                ...state,\n                tareasproyecto: state.tareasproyecto.map(tarea => tarea._id === action.payload._id ? action.payload : tarea)\n            }\n        case TAREA_ACTUAL:\n            return{\n                ...state,\n                tareaseleccionada: action.payload\n            }\n        case LIMPIAR_TAREA:\n            return{\n                ...state,\n                tareaseleccionada: null\n            }\n           \n        default:\n            return state;\n    }\n}","import React, {useReducer} from 'react'\nimport TareaContext from './TareaContext';\nimport TareaReducer from './TareaReducer';\nimport {\n    TAREAS_PROYECTO,\n    AGREGAR_TAREA,\n    VALIDAR_TAREA,\n    ELIMINAR_TAREA,\n    TAREA_ACTUAL,\n    ACTUALIZAR_TAREA,\n    LIMPIAR_TAREA\n} from '../../types';\n\nimport clienteAxios from '../../config/axios';\n\nconst TareaState = props =>{\n    const initialState = {\n        tareasproyecto:[],\n        errortarea: false,\n        tareaseleccionada:null\n    }\n\n    //Crear dispatch y state\n\n    const [state, dispatch] = useReducer(TareaReducer, initialState);\n\n    //Crear las funciones\n\n    //Obtener las tareas de un proyecto\n\n    const obtenerTareas = async proyecto => {\n        try {\n            const resultado = await clienteAxios.get('/api/tareas', {params:{proyecto}});\n\n            dispatch({\n                type: TAREAS_PROYECTO,\n                payload: resultado.data.tareas\n            })\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    //Valida y muestra un error\n\n    const validarTarea = () => {\n        dispatch({\n            type: VALIDAR_TAREA\n        })\n    }\n\n    //Eliminar tarea por id\n\n    const eliminarTarea = async (id, proyecto) => {\n       try {\n           await clienteAxios.delete(`/api/tareas/${id}` ,{params:{proyecto}});\n        dispatch({\n            type: ELIMINAR_TAREA,\n            payload:id\n        })\n       } catch (error) {\n           console.log(error);\n       }\n    }\n\n    //Agregar tareas al proyecto seleccionado\n\n    const agregarTarea = async tarea =>{\n        try {\n            const resultado = await clienteAxios.post('/api/tareas', tarea);\n            dispatch({\n                type:AGREGAR_TAREA,\n                payload:tarea\n            })\n        } catch (error) {\n            console.log(error)\n        }\n        \n    }\n\n    //Edita una tarea\n\n    const actualizarTarea = async tarea => {\n        try {\n            const resultado = await clienteAxios.put(`api/tareas/${tarea._id}`, tarea);\n            dispatch({\n                type: ACTUALIZAR_TAREA,\n                payload: resultado.data.tarea\n            })\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    //Extrae una tarea para edicion\n\n    const guardarTareaActual = tarea => {\n        dispatch({\n            type: TAREA_ACTUAL,\n            payload:tarea\n        })\n    }\n\n    \n\n    //Elimina la tarea seleccionada\n\n    const limpiarTarea = () =>{\n        dispatch({\n            type:LIMPIAR_TAREA\n        })\n    }\n\n    return (\n        <TareaContext.Provider\n        value={{\n            \n            tareasproyecto:state.tareasproyecto,\n            errortarea: state.errortarea,\n            tareaseleccionada: state.tareaseleccionada,\n            obtenerTareas,\n            agregarTarea,\n            validarTarea,\n            eliminarTarea,\n            guardarTareaActual,\n            actualizarTarea,\n            limpiarTarea\n        }}>\n            {props.children}\n        </TareaContext.Provider>\n    )\n}\n\nexport default TareaState;\n","import { MOSTRAR_ALERTA, OCULTAR_ALERTA} from '../../types';\n\nexport default (state, action) => {\n    switch(action.type) {\n        case MOSTRAR_ALERTA:\n            return {\n                alerta: action.payload\n            }\n        case OCULTAR_ALERTA:\n            return {\n                alerta: null\n            }\n        default:\n            return state;\n    }\n}","import React, { useReducer } from 'react';\nimport alertaReducer from './alertaReducer';\nimport alertaContext from './alertaContext';\n\nimport { MOSTRAR_ALERTA, OCULTAR_ALERTA} from '../../types';\n\nconst AlertaState = props => {\n    const initialState = {\n        alerta: null\n    }\n\n    const [ state, dispatch ] = useReducer(alertaReducer, initialState);\n\n    // Funciones\n    const mostrarAlerta = (msg, categoria) => {\n        dispatch({\n            type:  MOSTRAR_ALERTA,\n            payload: {\n                msg, \n                categoria\n            }\n        });\n\n        // Después de 5 segundos limpiar la alerta\n        setTimeout(() => {\n            dispatch({\n                type: OCULTAR_ALERTA\n            })\n        }, 5000);\n    }\n\n\n    return (\n        <alertaContext.Provider\n            value={{\n                alerta: state.alerta,\n                mostrarAlerta\n            }}\n        > \n            {props.children}\n        </alertaContext.Provider>\n    )\n}\n\nexport default AlertaState;","import { \n    REGISTRO_EXITOSO,\n    REGISTRO_ERROR,\n    OBTENER_USUARIO,\n    LOGIN_EXITOSO,\n    LOGIN_ERROR,\n    CERRAR_SESION\n} from '../../types';\n\nexport default (state, action) => {\n    switch(action.type) {\n        case REGISTRO_EXITOSO:\n        case LOGIN_EXITOSO:\n            localStorage.setItem('token', action.payload.token);\n            return {\n                ...state,\n                autenticado: true,\n                mensaje: null,\n                cargando: false\n            }\n        case OBTENER_USUARIO: \n            return {\n                ...state,\n                autenticado: true,\n                usuario: action.payload, \n                cargando: false\n            }\n        case CERRAR_SESION:\n        case LOGIN_ERROR:\n        case REGISTRO_ERROR:\n            localStorage.removeItem('token');\n            return {\n                ...state,\n                token: null,\n                usuario: null,\n                autenticado: null,\n                mensaje: action.payload, \n                cargando: false\n            }\n        \n        default:\n            return state;\n    }\n}","import clienteAxios from './axios';\n\nconst tokenAuth = token => {\n    if(token) {\n        clienteAxios.defaults.headers.common['x-auth-token'] = token;\n    } else {\n        delete clienteAxios.defaults.headers.common['x-auth-token'];\n    }\n}\n\nexport default tokenAuth;","import React, { useReducer } from 'react';\nimport AuthContext from './authContext';\nimport AuthReducer from './authReducer';\n\nimport clienteAxios from '../../config/axios';\nimport tokenAuth from '../../config/token';\n\nimport { \n    REGISTRO_EXITOSO,\n    REGISTRO_ERROR,\n    OBTENER_USUARIO,\n    LOGIN_EXITOSO,\n    LOGIN_ERROR,\n    CERRAR_SESION\n} from '../../types';\n\nconst AuthState = props => {\n    const initialState = {\n        token: localStorage.getItem('token'),\n        autenticado: null,\n        usuario: null, \n        mensaje: null, \n        cargando: true\n    }\n\n    const [ state, dispatch ] = useReducer(AuthReducer, initialState);\n\n    const registrarUsuario = async datos => {\n        try {\n\n            const respuesta = await clienteAxios.post('/api/usuarios', datos);\n            console.log(respuesta.data);\n\n            dispatch({\n                type: REGISTRO_EXITOSO,\n                payload:respuesta.data\n            });\n\n            // Obtener el usuario\n            usuarioAutenticado();\n        } catch (error) {\n            //console.log(error.response.data.msg);\n            const alerta = {\n                msg:error.response.data.msg,\n                categoria:'alerta-error'\n            }\n\n            dispatch({\n                type: REGISTRO_ERROR,\n                payload:alerta\n            })\n        }\n    }\n\n    // Retorna el usuario autenticado\n    const usuarioAutenticado = async () => {\n        const token = localStorage.getItem('token');\n        if(token) {\n            tokenAuth(token);\n        }\n\n        try {\n            const respuesta = await clienteAxios.get('/api/auth');\n            //console.log(respuesta);\n            dispatch({\n                type: OBTENER_USUARIO,\n                payload: respuesta.data.usuario\n            });\n\n        } catch (error) {\n            console.log(error.response);\n            dispatch({\n                type: LOGIN_ERROR\n            })\n        }\n    }\n    \n    // Cuando el usuario inicia sesión\n    const iniciarSesion = async datos => {\n        try {\n            const respuesta = await clienteAxios.post('/api/auth', datos);\n            \n            dispatch({\n                type: LOGIN_EXITOSO,\n                payload: respuesta.data\n            });\n\n            // Obtener el usuario\n            usuarioAutenticado();\n        } catch (error) {\n            console.log(error.response.data.msg);\n            const alerta = {\n                msg: error.response.data.msg,\n                categoria: 'alerta-error'\n            }\n\n            dispatch({\n                type: LOGIN_ERROR,\n                payload: alerta\n            })\n        }\n    }\n    \n    // Cierra la sesión del usuario\n    const cerrarSesion = () => {\n        dispatch({\n            type: CERRAR_SESION\n        })\n    }\n\n    return(\n        <AuthContext.Provider\n            value={{\n                token: state.token,\n                autenticado: state.autenticado,\n                usuario: state.usuario,\n                mensaje: state.mensaje,\n                cargando: state.cargando,\n                registrarUsuario,\n                iniciarSesion,\n                usuarioAutenticado,\n                cerrarSesion\n            }}\n        >{props.children}\n\n        </AuthContext.Provider>\n    )\n}\nexport default AuthState;","import React, { useContext, useEffect } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport AuthContext from '../../context/autenticacion/authContext';\n\nconst RutaPrivada = ({ component: Component, ...props  }) => {\n\n    const authContext = useContext(AuthContext);\n    const { autenticado, cargando, usuarioAutenticado } = authContext;\n\n    useEffect(() => {\n        usuarioAutenticado();\n        // eslint-disable-next-line\n    }, []);\n\n    return ( \n        <Route { ...props } render={ props => !autenticado && !cargando ?  (\n            <Redirect to=\"/\" />\n        )  : (\n            <Component {...props} />\n        ) } />\n\n     );\n}\n \nexport default RutaPrivada;","import React from 'react';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport Login from './components/auth/Login';\nimport NuevaCuenta from './components/auth/NuevaCuenta';\nimport Proyectos from './components/proyectos/Proyectos';\n\nimport ProyectoState from './context/proyectos/ProyectoState';\nimport TareaState from './context/tareas/TareaState';\nimport AlertaState from './context/alertas/alertaState';\nimport AuthState from './context/autenticacion/authState';\nimport tokenAuth from './config/token';\nimport RutaPrivada from './components/rutas/RutaPrivada';\n\n\n//Revisar si tenemos untoken\nconst token = localStorage.getItem('token');\nif(token){\n  tokenAuth(token);\n}\n\nfunction App() {\n  return (\n    <ProyectoState>\n      <TareaState>\n        <AlertaState>\n          <AuthState>\n            <Router>\n              <Switch>\n                <Route exact path=\"/\" component={Login}/>\n                <Route exact path=\"/nueva-cuenta\" component={NuevaCuenta}/>\n                <RutaPrivada exact path=\"/proyectos\" component={Proyectos}/>\n              </Switch>\n            </Router>\n          </AuthState>\n        </AlertaState>\n      </TareaState>\n    </ProyectoState>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}